services:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: tcg-trader-backend
    volumes:
      - static_files:/app/static #Only used to download assets
    env_file: .env
    networks:
      app-network:
        ipv4_address: "172.20.0.2"
    depends_on:
    - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.staging
    container_name: tcg-trader-frontend
    networks:
      app-network:
        ipv4_address: "172.20.0.3"
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.frontend.rule=Host(`localhost`) && PathPrefix(`/`)"
    - "traefik.http.routers.frontend.entrypoints=web"
    - "traefik.http.services.frontend.loadbalancer.server.port=4200"

  reverse-proxy:
    image: traefik:v3.1
    container_name: tcg-trader-reverse-proxy
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.traefik.address=:8080"
      - "--api.insecure=true"
    ports:
      - "5000:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      app-network:
        ipv4_address: "172.20.0.4"

  db:
    image: postgres:13
    container_name: tcg-trader-db
    env_file: .env
    tmpfs: # makes the db run in memory to ensure it's clean
    - /var/lib/postgresql/data
    volumes:
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      app-network:
        ipv4_address: "172.20.0.5"
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  file-server:
    image: nginx
    container_name: tcg-trader-file-server
    ports:
      - 7000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_files:/usr/share/nginx/html
    networks:
      app-network:
        ipv4_address: "172.20.0.6"
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.files.rule=Host(`localhost`) && PathPrefix(`/files/`)"
    - "traefik.http.routers.files.entrypoints=web"
    - "traefik.http.services.files.loadbalancer.server.port=80"

volumes:
  static_files:

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.20.0.0/24"
