version: '3.8'

services:

  backend:
    build:
      context: ./backend  # Path to your Django project
    container_name: tcg-trader-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file: .env 
    networks:
      app-network:
        ipv4_address: "172.20.0.2"
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
    - db

  frontend:
    build:
      context: ./frontend  # Path to your Angular project
    container_name: tcg-trader-frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
    networks:
      app-network:
        ipv4_address: "172.20.0.3"
    command: npm start

  gateway:
    image: nginx
    ports:
      - 5000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # configuration file for reverse proxy and file server
      - ./static:/usr/share/nginx/html
    networks:
      app-network:
        ipv4_address: "172.20.0.4"
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:13 
    container_name: tcg-trader-db
    env_file: .env 
    volumes:
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
      - postgres_data:/var/lib/postgresql/data 
    networks:
      app-network:
        ipv4_address: "172.20.0.5"
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.20.0.0/24"